import numpy as np
from scipy.interpolate import Rbf


def _calc_svnel_degas():
    """ Calculates cross section for "Neutral Electron Losses," whatever that is.

    accepts ne in m^-3 and Te in eV
    results in erg/s, i.e. units of power.
    """

    # populate the 15x60 array to be used for interpolations
    # rows correspond to ne, columns correspond to Te

    nel_data = np.zeros((15, 60))
    nel_data[0] = np.array([4.87679E-78, 1.21210E-63, 3.22057E-52, 3.73566E-43, 5.78390E-36, 2.90433E-30,
                            9.57467E-26, 3.62929E-22, 2.46956E-19, 4.29975E-17, 2.53951E-15, 6.36583E-14,
                            8.08868E-13, 5.99444E-12, 2.89415E-11, 9.93357E-11, 2.59710E-10, 5.46356E-10,
                            9.66151E-10, 1.48712E-09, 2.15829E-09, 2.93300E-09, 3.71879E-09, 4.45745E-09,
                            5.10881E-09, 5.65019E-09, 6.07401E-09, 6.38372E-09, 6.58971E-09, 6.70578E-09,
                            6.74675E-09, 6.72690E-09, 6.65908E-09, 6.55439E-09, 6.42212E-09, 6.26985E-09,
                            6.10364E-09, 5.92831E-09, 5.74757E-09, 5.56431E-09, 5.38071E-09, 5.19841E-09,
                            5.01864E-09, 4.59139E-09, 4.30706E-09, 4.04605E-09, 3.79040E-09, 3.54215E-09,
                            3.30279E-09, 3.07341E-09, 2.85470E-09, 2.64710E-09, 2.45081E-09, 2.26585E-09,
                            2.09209E-09, 1.92928E-09, 1.77712E-09, 1.63522E-09, 1.50314E-09, 1.38044E-09])
    nel_data[1] = np.array([1.54216E-77, 3.83298E-63, 1.01843E-51, 1.18131E-42, 1.82902E-35, 9.18426E-30,
                            3.02776E-25, 1.14768E-21, 7.80939E-19, 1.35967E-16, 8.03001E-15, 2.01262E-13,
                            2.55665E-12, 1.89393E-11, 9.13890E-11, 3.13464E-10, 8.18945E-10, 1.72156E-09,
                            3.04222E-09, 4.67977E-09, 6.79003E-09, 9.22482E-09, 1.16925E-08, 1.40117E-08,
                            1.60564E-08, 1.77560E-08, 1.90866E-08, 2.00593E-08, 2.07067E-08, 2.10721E-08,
                            2.12020E-08, 2.11410E-08, 2.09295E-08, 2.06023E-08, 2.01884E-08, 1.97117E-08,
                            1.91912E-08, 1.86419E-08, 1.80755E-08, 1.75011E-08, 1.69255E-08, 1.63540E-08,
                            1.57902E-08, 1.44437E-08, 1.35530E-08, 1.27331E-08, 1.19299E-08, 1.11498E-08,
                            1.03976E-08, 9.67668E-09, 8.98922E-09, 8.33660E-09, 7.71945E-09, 7.13784E-09,
                            6.59137E-09, 6.07930E-09, 5.60064E-09, 5.15417E-09, 4.73858E-09, 4.35242E-09])
    nel_data[2] = np.array([4.87663E-77, 1.21207E-62, 3.22048E-51, 3.73557E-42, 5.78378E-35, 2.90428E-29,
                            9.57451E-25, 3.62923E-21, 2.46951E-18, 4.29946E-16, 2.53899E-14, 6.36238E-13,
                            8.07910E-12, 5.98134E-11, 2.88393E-10, 9.88261E-10, 2.57929E-09, 5.41665E-09,
                            9.56281E-09, 1.46977E-08, 2.13179E-08, 2.89506E-08, 3.66780E-08, 4.39401E-08,
                            5.03399E-08, 5.56613E-08, 5.98278E-08, 6.28759E-08, 6.49069E-08, 6.60564E-08,
                            6.64695E-08, 6.62857E-08, 6.56310E-08, 6.46139E-08, 6.33254E-08, 6.18395E-08,
                            6.02160E-08, 5.85017E-08, 5.67334E-08, 5.49392E-08, 5.31408E-08, 5.13542E-08,
                            4.95916E-08, 4.53528E-08, 4.25717E-08, 4.00015E-08, 3.74832E-08, 3.50370E-08,
                            3.26777E-08, 3.04159E-08, 2.82589E-08, 2.62108E-08, 2.42737E-08, 2.24478E-08,
                            2.07321E-08, 1.91241E-08, 1.76208E-08, 1.62184E-08, 1.49128E-08, 1.36995E-08])
    nel_data[3] = np.array([1.54200E-76, 3.83262E-62, 1.01834E-50, 1.18123E-41, 1.82890E-34, 9.18372E-29,
                            3.02761E-24, 1.14762E-20, 7.80893E-18, 1.35950E-15, 8.02726E-14, 2.01090E-12,
                            2.55202E-11, 1.88772E-10, 9.09128E-10, 3.11119E-09, 8.10835E-09, 1.70038E-08,
                            2.99795E-08, 4.60228E-08, 6.67218E-08, 9.05565E-08, 1.14655E-07, 1.37294E-07,
                            1.57234E-07, 1.73830E-07, 1.86821E-07, 1.96340E-07, 2.02692E-07, 2.06305E-07,
                            2.07626E-07, 2.07090E-07, 2.05086E-07, 2.01953E-07, 1.97972E-07, 1.93374E-07,
                            1.88343E-07, 1.83027E-07, 1.77539E-07, 1.71967E-07, 1.66379E-07, 1.60824E-07,
                            1.55342E-07, 1.42024E-07, 1.33387E-07, 1.25359E-07, 1.17491E-07, 1.09845E-07,
                            1.02469E-07, 9.53948E-08, 8.86462E-08, 8.22366E-08, 7.61727E-08, 7.04556E-08,
                            6.50817E-08, 6.00441E-08, 5.53334E-08, 5.09380E-08, 4.68450E-08, 4.30407E-08])
    nel_data[4] = np.array([4.87503E-76, 1.21171E-61, 3.21965E-50, 3.73471E-41, 5.78258E-34, 2.90374E-28,
                            9.57294E-24, 3.62869E-20, 2.46911E-17, 4.29830E-15, 2.53740E-13, 6.35319E-12,
                            8.05550E-11, 5.95064E-10, 2.86086E-09, 9.77085E-09, 2.54113E-08, 5.31803E-08,
                            9.35845E-08, 1.43424E-07, 2.07804E-07, 2.81783E-07, 3.56458E-07, 4.26555E-07,
                            4.88269E-07, 5.39668E-07, 5.79897E-07, 6.09482E-07, 6.29256E-07, 6.40589E-07,
                            6.44843E-07, 6.43371E-07, 6.37356E-07, 6.27842E-07, 6.15697E-07, 6.01625E-07,
                            5.86204E-07, 5.69883E-07, 5.53014E-07, 5.35870E-07, 5.18657E-07, 5.01535E-07,
                            4.84619E-07, 4.42913E-07, 4.16315E-07, 3.91389E-07, 3.66942E-07, 3.43172E-07,
                            3.20226E-07, 2.98210E-07, 2.77195E-07, 2.57227E-07, 2.38327E-07, 2.20500E-07,
                            2.03736E-07, 1.88015E-07, 1.73308E-07, 1.59580E-07, 1.46792E-07, 1.34902E-07])
    nel_data[5] = np.array([1.54041E-75, 3.82909E-61, 1.01751E-49, 1.18036E-40, 1.82771E-33, 9.17838E-28,
                            3.02604E-23, 1.14708E-19, 7.80523E-17, 1.35860E-14, 8.01704E-13, 2.00558E-11,
                            2.53915E-10, 1.87164E-09, 8.97377E-09, 3.05546E-08, 7.92119E-08, 1.65264E-07,
                            2.90008E-07, 4.43366E-07, 6.41832E-07, 8.69121E-07, 1.09810E-06, 1.31281E-06,
                            1.50177E-06, 1.65918E-06, 1.78245E-06, 1.87360E-06, 1.93465E-06, 1.97006E-06,
                            1.98387E-06, 1.98046E-06, 1.96303E-06, 1.93488E-06, 1.89864E-06, 1.85641E-06,
                            1.80999E-06, 1.76075E-06, 1.70975E-06, 1.65782E-06, 1.60559E-06, 1.55356E-06,
                            1.50208E-06, 1.37220E-06, 1.29140E-06, 1.21473E-06, 1.13946E-06, 1.06619E-06,
                            9.95403E-07, 9.27423E-07, 8.62481E-07, 8.00724E-07, 7.42226E-07, 6.87008E-07,
                            6.35048E-07, 5.86287E-07, 5.40643E-07, 4.98011E-07, 4.58276E-07, 4.21308E-07])
    nel_data[6] = np.array([4.85913E-75, 1.20819E-60, 3.21130E-49, 3.72607E-40, 5.77067E-33, 2.89841E-27,
                            9.55726E-23, 3.62332E-19, 2.46553E-16, 4.29055E-14, 2.52980E-12, 6.31797E-11,
                            7.97675E-10, 5.85728E-09, 2.79528E-08, 9.46885E-08, 2.44203E-07, 5.06986E-07,
                            8.85732E-07, 1.34898E-06, 1.95010E-06, 2.63487E-06, 3.32329E-06, 3.96820E-06,
                            4.53589E-06, 5.00915E-06, 5.38071E-06, 5.65710E-06, 5.84354E-06, 5.95361E-06,
                            5.99920E-06, 5.99651E-06, 5.95002E-06, 5.87118E-06, 5.76781E-06, 5.64605E-06,
                            5.51125E-06, 5.36778E-06, 5.21837E-06, 5.06564E-06, 4.91155E-06, 4.75757E-06,
                            4.60483E-06, 4.20537E-06, 3.96493E-06, 3.73301E-06, 3.50486E-06, 3.28240E-06,
                            3.06710E-06, 2.86001E-06, 2.66190E-06, 2.47323E-06, 2.29428E-06, 2.12515E-06,
                            1.96581E-06, 1.81611E-06, 1.67582E-06, 1.54466E-06, 1.42229E-06, 1.30833E-06])
    nel_data[7] = np.array([1.52464E-74, 3.79412E-60, 1.00922E-48, 1.17178E-39, 1.81586E-32, 9.12530E-27,
                            3.01041E-22, 1.14172E-18, 7.76947E-16, 1.35115E-13, 7.95074E-12, 1.97813E-10,
                            2.48338E-09, 1.80980E-08, 8.56111E-08, 2.87285E-07, 7.34052E-07, 1.51084E-06,
                            2.61947E-06, 3.96401E-06, 5.71297E-06, 7.69022E-06, 9.67329E-06, 1.15303E-05,
                            1.31679E-05, 1.45379E-05, 1.56209E-05, 1.64350E-05, 1.69944E-05, 1.73368E-05,
                            1.74951E-05, 1.75314E-05, 1.74330E-05, 1.72407E-05, 1.69765E-05, 1.66625E-05,
                            1.63047E-05, 1.59223E-05, 1.55180E-05, 1.51005E-05, 1.46759E-05, 1.42485E-05,
                            1.38216E-05, 1.26318E-05, 1.19421E-05, 1.12649E-05, 1.05956E-05, 9.94026E-06,
                            9.30365E-06, 8.68923E-06, 8.09954E-06, 7.53633E-06, 7.00069E-06, 6.49317E-06,
                            6.01389E-06, 5.56262E-06, 5.13887E-06, 4.74191E-06, 4.37087E-06, 4.02476E-06])
    nel_data[8] = np.array([4.70565E-74, 1.17405E-59, 3.13014E-48, 3.64189E-39, 5.65415E-32, 2.84612E-26,
                            9.40291E-22, 3.56989E-18, 2.42944E-15, 4.21600E-13, 2.46753E-11, 6.08354E-10,
                            7.54245E-09, 5.40739E-08, 2.51125E-07, 8.26793E-07, 2.07432E-06, 4.19956E-06,
                            7.17903E-06, 1.07398E-05, 1.53658E-05, 2.05527E-05, 2.57448E-05, 3.06174E-05,
                            3.49424E-05, 3.86005E-05, 4.15440E-05, 4.38133E-05, 4.54401E-05, 4.65133E-05,
                            4.71113E-05, 4.74224E-05, 4.73612E-05, 4.70470E-05, 4.65353E-05, 4.59721E-05,
                            4.52211E-05, 4.44213E-05, 4.35305E-05, 4.25849E-05, 4.16028E-05, 4.05954E-05,
                            3.95719E-05, 3.62922E-05, 3.44798E-05, 3.26635E-05, 3.08487E-05, 2.90544E-05,
                            2.72954E-05, 2.55836E-05, 2.39282E-05, 2.23359E-05, 2.08116E-05, 1.93585E-05,
                            1.79784E-05, 1.66720E-05, 1.54393E-05, 1.42792E-05, 1.31902E-05, 1.21703E-05])
    nel_data[9] = np.array([1.38310E-73, 3.47663E-59, 9.33179E-48, 1.09237E-38, 1.70528E-31, 8.62629E-26,
                            2.86222E-21, 1.08997E-17, 7.41641E-15, 1.27883E-12, 7.37327E-11, 1.77526E-09,
                            2.13461E-08, 1.47214E-07, 6.56064E-07, 2.07468E-06, 5.01853E-06, 9.84771E-06,
                            1.64114E-05, 2.40713E-05, 3.39651E-05, 4.49796E-05, 5.60090E-05, 6.64400E-05,
                            7.58445E-05, 8.39953E-05, 9.07920E-05, 9.62995E-05, 1.00556E-04, 1.03714E-04,
                            1.05906E-04, 1.07555E-04, 1.08381E-04, 1.08644E-04, 1.08449E-04, 1.08726E-04,
                            1.08171E-04, 1.07646E-04, 1.06772E-04, 1.05698E-04, 1.04470E-04, 1.03107E-04,
                            1.01625E-04, 9.41328E-05, 9.03740E-05, 8.64587E-05, 8.24268E-05, 7.83324E-05,
                            7.42218E-05, 7.01347E-05, 6.61040E-05, 6.21573E-05, 5.83170E-05, 5.46006E-05,
                            5.10219E-05, 4.75911E-05, 4.43151E-05, 4.11982E-05, 3.82425E-05, 3.54483E-05])
    nel_data[10] = np.array([3.57611E-73, 9.15374E-59, 2.49868E-47, 2.97073E-38, 4.70431E-31, 2.41108E-25,
                             8.09330E-21, 3.10734E-17, 2.11288E-14, 3.58059E-12, 1.98617E-10, 4.51856E-09,
                             5.08209E-08, 3.24678E-07, 1.34564E-06, 3.99279E-06, 9.16538E-06, 1.72570E-05,
                             2.78681E-05, 3.99411E-05, 5.54543E-05, 7.26510E-05, 8.99159E-05, 1.06418E-04,
                             1.21580E-04, 1.35096E-04, 1.46817E-04, 1.56826E-04, 1.65140E-04, 1.71949E-04,
                             1.77406E-04, 1.82220E-04, 1.85776E-04, 1.88492E-04, 1.90500E-04, 1.95020E-04,
                             1.97256E-04, 2.00155E-04, 2.02292E-04, 2.04095E-04, 2.05649E-04, 2.06950E-04,
                             2.07990E-04, 1.96401E-04, 1.92255E-04, 1.87466E-04, 1.82104E-04, 1.76259E-04,
                             1.70018E-04, 1.63461E-04, 1.56665E-04, 1.49702E-04, 1.42637E-04, 1.35531E-04,
                             1.28440E-04, 1.21413E-04, 1.14493E-04, 1.07720E-04, 1.01126E-04, 9.47368E-05])
    nel_data[11] = np.array([7.17234E-73, 1.89276E-58, 5.32204E-47, 6.51130E-38, 1.05987E-30, 5.57654E-25,
                             1.91757E-20, 7.49222E-17, 5.08655E-14, 8.30950E-12, 4.27673E-10, 8.83837E-09,
                             9.02480E-08, 5.24963E-07, 2.01677E-06, 5.64617E-06, 1.24165E-05, 2.26630E-05,
                             3.57945E-05, 5.05101E-05, 6.93900E-05, 9.02922E-05, 1.11331E-04, 1.31589E-04,
                             1.50430E-04, 1.67524E-04, 1.82705E-04, 1.96074E-04, 2.07626E-04, 2.17575E-04,
                             2.26077E-04, 2.34052E-04, 2.40613E-04, 2.46285E-04, 2.51208E-04, 2.61318E-04,
                             2.67800E-04, 2.76098E-04, 2.83537E-04, 2.90895E-04, 2.98336E-04, 3.05842E-04,
                             3.13389E-04, 3.01977E-04, 3.01863E-04, 3.00764E-04, 2.98706E-04, 2.95741E-04,
                             2.91922E-04, 2.87298E-04, 2.81923E-04, 2.75849E-04, 2.69133E-04, 2.61833E-04,
                             2.54010E-04, 2.45726E-04, 2.37047E-04, 2.28039E-04, 2.18770E-04, 2.09307E-04])
    nel_data[12] = np.array([1.05167E-72, 2.85763E-58, 8.28100E-47, 1.04496E-37, 1.75540E-30, 9.53530E-25,
                             3.38204E-20, 1.35292E-16, 9.16488E-14, 1.42657E-11, 6.72975E-10, 1.26640E-08,
                             1.19542E-07, 6.51925E-07, 2.39323E-06, 6.49372E-06, 1.39779E-05, 2.51423E-05,
                             3.93138E-05, 5.51014E-05, 7.53564E-05, 9.77782E-05, 1.20378E-04, 1.42210E-04,
                             1.62623E-04, 1.81283E-04, 1.98017E-04, 2.12940E-04, 2.26041E-04, 2.37541E-04,
                             2.47602E-04, 2.57247E-04, 2.65458E-04, 2.72813E-04, 2.79460E-04, 2.92920E-04,
                             3.02096E-04, 3.13922E-04, 3.25001E-04, 3.36353E-04, 3.48229E-04, 3.60650E-04,
                             3.73628E-04, 3.64328E-04, 3.68844E-04, 3.72516E-04, 3.75349E-04, 3.77372E-04,
                             3.78607E-04, 3.79071E-04, 3.78777E-04, 3.77733E-04, 3.75948E-04, 3.73429E-04,
                             3.70181E-04, 3.66213E-04, 3.61532E-04, 3.56150E-04, 3.50083E-04, 3.43348E-04])
    nel_data[13] = np.array([1.23357E-72, 3.40683E-58, 1.00475E-46, 1.29210E-37, 2.21508E-30, 1.22955E-24,
                             4.45884E-20, 1.81541E-16, 1.22751E-13, 1.84399E-11, 8.21551E-10, 1.46594E-08,
                             1.33075E-07, 7.05207E-07, 2.54096E-06, 6.81032E-06, 1.45446E-05, 2.60248E-05,
                             4.05521E-05, 5.66977E-05, 7.74202E-05, 1.00353E-04, 1.23487E-04, 1.45862E-04,
                             1.66832E-04, 1.86052E-04, 2.03350E-04, 2.18843E-04, 2.32518E-04, 2.44602E-04,
                             2.55256E-04, 2.65543E-04, 2.74398E-04, 2.82418E-04, 2.89755E-04, 3.04563E-04,
                             3.14847E-04, 3.28142E-04, 3.40770E-04, 3.53856E-04, 3.67699E-04, 3.82349E-04,
                             3.97853E-04, 3.89834E-04, 3.96746E-04, 4.02995E-04, 4.08594E-04, 4.13583E-04,
                             4.17990E-04, 4.21839E-04, 4.25150E-04, 4.27933E-04, 4.30198E-04, 4.31948E-04,
                             4.33185E-04, 4.33905E-04, 4.34102E-04, 4.33769E-04, 4.32896E-04, 4.31472E-04])
    nel_data[14] = np.array([1.30494E-72, 3.62728E-58, 1.07743E-46, 1.39655E-37, 2.41507E-30, 1.35344E-24,
                             4.95790E-20, 2.03522E-16, 1.37441E-13, 2.03018E-11, 8.82268E-10, 1.54038E-08,
                             1.37808E-07, 7.22474E-07, 2.58606E-06, 6.90400E-06, 1.47126E-05, 2.62836E-05,
                             4.09148E-05, 5.71767E-05, 7.80479E-05, 1.01139E-04, 1.24453E-04, 1.47014E-04,
                             1.68146E-04, 1.87549E-04, 2.05012E-04, 2.20691E-04, 2.34553E-04, 2.46843E-04,
                             2.57706E-04, 2.68217E-04, 2.77298E-04, 2.85552E-04, 2.93130E-04, 3.08403E-04,
                             3.19075E-04, 3.32884E-04, 3.46056E-04, 3.59756E-04, 3.74300E-04, 3.89750E-04,
                             4.06169E-04, 3.98651E-04, 4.06464E-04, 4.13697E-04, 4.20370E-04, 4.26530E-04,
                             4.32215E-04, 4.37460E-04, 4.42290E-04, 4.46730E-04, 4.50797E-04, 4.54507E-04,
                             4.57871E-04, 4.60898E-04, 4.63594E-04, 4.65960E-04, 4.67998E-04, 4.69705E-04])

    Te_vals, ne_vals = np.meshgrid(-1.2 + (np.linspace(1, 60, 60) - 1) / 10 - 3,
                                   10 + 0.5 * (np.linspace(1, 15, 15) - 1) + 6)

    return Rbf(Te_vals, ne_vals, nel_data)
