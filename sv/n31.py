import numpy as np
from scipy.interpolate import Rbf


def _calc_svn31_degas():
    """ Calculates cross section for "Neutral n=3 / n=1," whatever that is.

    accepts ne in m^-3 and Te in eV
    results in erg/s, i.e. units of power.
    """

    # populate the 15x60 array to be used for interpolations
    # rows correspond to ne, columns correspond to Te

    n31_data = np.zeros((15, 60))
    n31_data[0] = np.array([4.72157E-89, 5.55328E-72, 1.96724E-58, 1.11253E-47, 3.77882E-39, 2.20902E-32,
                            5.12968E-27, 9.19486E-23, 2.15588E-19, 1.00486E-16, 1.29779E-14, 6.04445E-13,
                            1.25142E-11, 1.35986E-10, 8.85044E-10, 3.83187E-09, 1.19975E-08, 2.90294E-08,
                            5.72289E-08, 9.58646E-08, 1.41844E-07, 2.02884E-07, 2.68013E-07, 3.31782E-07,
                            3.90055E-07, 4.40135E-07, 4.80717E-07, 5.11618E-07, 5.33417E-07, 5.47127E-07,
                            5.53947E-07, 5.55096E-07, 5.51704E-07, 5.44771E-07, 5.35147E-07, 5.23533E-07,
                            5.10499E-07, 4.96497E-07, 4.81881E-07, 4.66927E-07, 4.51845E-07, 4.36795E-07,
                            4.21895E-07, 3.91802E-07, 3.67400E-07, 3.45752E-07, 3.24423E-07, 3.03611E-07,
                            2.83463E-07, 2.64088E-07, 2.45561E-07, 2.27930E-07, 2.11221E-07, 1.95445E-07,
                            1.80598E-07, 1.66666E-07, 1.53625E-07, 1.41447E-07, 1.30100E-07, 1.19547E-07])
    n31_data[1] = np.array([1.49491E-88, 1.75801E-71, 6.22697E-58, 3.52115E-47, 1.19587E-38, 6.99001E-32,
                            1.62293E-26, 2.90836E-22, 6.81640E-19, 3.17527E-16, 4.09772E-14, 1.90675E-12,
                            3.94365E-11, 4.28104E-10, 2.78354E-09, 1.20408E-08, 3.76698E-08, 9.10856E-08,
                            1.79469E-07, 3.00504E-07, 4.44516E-07, 6.35814E-07, 8.39802E-07, 1.03958E-06,
                            1.22216E-06, 1.37915E-06, 1.50643E-06, 1.60343E-06, 1.67196E-06, 1.71518E-06,
                            1.73682E-06, 1.74072E-06, 1.73037E-06, 1.70892E-06, 1.67903E-06, 1.64286E-06,
                            1.60224E-06, 1.55856E-06, 1.51294E-06, 1.46623E-06, 1.41911E-06, 1.37208E-06,
                            1.32549E-06, 1.23085E-06, 1.15460E-06, 1.08674E-06, 1.01987E-06, 9.54601E-07,
                            8.91404E-07, 8.30616E-07, 7.72476E-07, 7.17137E-07, 6.64684E-07, 6.15150E-07,
                            5.68522E-07, 5.24759E-07, 4.83788E-07, 4.45522E-07, 4.09858E-07, 3.76681E-07])
    n31_data[2] = np.array([4.74546E-88, 5.57832E-71, 1.97514E-57, 1.11650E-46, 3.79069E-38, 2.21496E-31,
                            5.14057E-26, 9.20692E-22, 2.15611E-18, 1.00328E-15, 1.29299E-13, 6.00717E-12,
                            1.24041E-10, 1.34442E-09, 8.72855E-09, 3.77070E-08, 1.17831E-07, 2.84644E-07,
                            5.60408E-07, 9.37788E-07, 1.38674E-06, 1.98348E-06, 2.61934E-06, 3.24243E-06,
                            3.81193E-06, 4.30215E-06, 4.69990E-06, 5.00360E-06, 5.21866E-06, 5.35491E-06,
                            5.42395E-06, 5.43780E-06, 5.40710E-06, 5.34168E-06, 5.24982E-06, 5.13819E-06,
                            5.01257E-06, 4.87729E-06, 4.73582E-06, 4.59087E-06, 4.44449E-06, 4.29826E-06,
                            4.15337E-06, 3.85641E-06, 3.61931E-06, 3.40735E-06, 3.19836E-06, 2.99431E-06,
                            2.79666E-06, 2.60647E-06, 2.42452E-06, 2.25127E-06, 2.08702E-06, 1.93186E-06,
                            1.78578E-06, 1.64863E-06, 1.52020E-06, 1.40023E-06, 1.28839E-06, 1.18433E-06])
    n31_data[3] = np.array([1.51868E-87, 1.78294E-70, 6.30569E-57, 3.56071E-46, 1.20771E-37, 7.04969E-31,
                            1.63422E-25, 2.92271E-21, 6.83174E-18, 3.17157E-15, 4.07639E-13, 1.88833E-11,
                            3.88771E-10, 4.20247E-09, 2.72174E-08, 1.17325E-07, 3.65966E-07, 8.82759E-07,
                            1.73597E-06, 2.90244E-06, 4.29039E-06, 6.13606E-06, 8.10132E-06, 1.00284E-05,
                            1.17905E-05, 1.33111E-05, 1.45460E-05, 1.54927E-05, 1.61658E-05, 1.65960E-05,
                            1.68185E-05, 1.68720E-05, 1.67864E-05, 1.65928E-05, 1.63168E-05, 1.59779E-05,
                            1.55955E-05, 1.51823E-05, 1.47493E-05, 1.43047E-05, 1.38550E-05, 1.34052E-05,
                            1.29589E-05, 1.20315E-05, 1.13005E-05, 1.06427E-05, 9.99358E-06, 9.35926E-06,
                            8.74440E-06, 8.15240E-06, 7.58566E-06, 7.04575E-06, 6.53360E-06, 6.04957E-06,
                            5.59363E-06, 5.16540E-06, 4.76425E-06, 4.38935E-06, 4.03974E-06, 3.71434E-06])
    n31_data[4] = np.array([4.97977E-87, 5.82448E-70, 2.05296E-56, 1.15566E-45, 3.90809E-37, 2.27427E-30,
                            5.25406E-25, 9.35875E-21, 2.17693E-17, 1.00492E-14, 1.28362E-12, 5.90826E-11,
                            1.20894E-09, 1.30009E-08, 8.38141E-08, 3.59880E-07, 1.11895E-06, 2.69229E-06,
                            5.28450E-06, 8.82372E-06, 1.30406E-05, 1.86480E-05, 2.46173E-05, 3.04773E-05,
                            3.58439E-05, 4.04932E-05, 4.42791E-05, 4.72101E-05, 4.93077E-05, 5.06728E-05,
                            5.14067E-05, 5.16456E-05, 5.14480E-05, 5.09182E-05, 5.01327E-05, 4.91401E-05,
                            4.80158E-05, 4.67918E-05, 4.55024E-05, 4.41730E-05, 4.28235E-05, 4.14693E-05,
                            4.01221E-05, 3.72544E-05, 3.50362E-05, 3.30201E-05, 3.10272E-05, 2.90767E-05,
                            2.71833E-05, 2.53580E-05, 2.36086E-05, 2.19401E-05, 2.03558E-05, 1.88571E-05,
                            1.74441E-05, 1.61159E-05, 1.48708E-05, 1.37063E-05, 1.26195E-05, 1.16074E-05])
    n31_data[5] = np.array([1.74270E-86, 2.01941E-69, 7.05648E-56, 3.94001E-45, 1.32175E-36, 7.62612E-30,
                            1.74454E-24, 3.07193E-20, 7.05017E-17, 3.20613E-14, 4.03154E-12, 1.82700E-10,
                            3.68511E-09, 3.91865E-08, 2.50191E-07, 1.06567E-06, 3.29233E-06, 7.88341E-06,
                            1.54206E-05, 2.56905E-05, 3.79870E-05, 5.43127E-05, 7.17138E-05, 8.88488E-05,
                            1.04611E-04, 1.18361E-04, 1.29644E-04, 1.38557E-04, 1.45030E-04, 1.49399E-04,
                            1.51927E-04, 1.53231E-04, 1.53116E-04, 1.52000E-04, 1.50103E-04, 1.47464E-04,
                            1.44458E-04, 1.41114E-04, 1.37542E-04, 1.33817E-04, 1.29999E-04, 1.26135E-04,
                            1.22264E-04, 1.13608E-04, 1.07099E-04, 1.01091E-04, 9.51279E-05, 8.92701E-05,
                            8.35652E-05, 7.80493E-05, 7.27484E-05, 6.76809E-05, 6.28583E-05, 5.82870E-05,
                            5.39691E-05, 4.99033E-05, 4.60856E-05, 4.25099E-05, 3.91684E-05, 3.60523E-05])
    n31_data[6] = np.array([6.94183E-86, 7.92309E-69, 2.72735E-55, 1.50003E-44, 4.95139E-36, 2.80241E-29,
                            6.25830E-24, 1.07040E-19, 2.37414E-16, 1.03995E-13, 1.25851E-11, 5.49617E-10,
                            1.07245E-08, 1.11294E-07, 6.96159E-07, 2.91634E-06, 8.89354E-06, 2.10895E-05,
                            4.09719E-05, 6.79612E-05, 1.00714E-04, 1.43921E-04, 1.90144E-04, 2.35971E-04,
                            2.78528E-04, 3.16155E-04, 3.47546E-04, 3.73168E-04, 3.92364E-04, 4.06126E-04,
                            4.15022E-04, 4.22631E-04, 4.25307E-04, 4.25188E-04, 4.22832E-04, 4.17455E-04,
                            4.11369E-04, 4.04113E-04, 3.96031E-04, 3.87309E-04, 3.78121E-04, 3.68610E-04,
                            3.58891E-04, 3.34389E-04, 3.16762E-04, 3.00104E-04, 2.83389E-04, 2.66814E-04,
                            2.50536E-04, 2.34679E-04, 2.19335E-04, 2.04576E-04, 1.90452E-04, 1.76995E-04,
                            1.64225E-04, 1.52149E-04, 1.40764E-04, 1.30063E-04, 1.20030E-04, 1.10645E-04])
    n31_data[7] = np.array([3.12631E-85, 3.54408E-68, 1.20943E-54, 6.57794E-44, 2.13620E-35, 1.17733E-28,
                            2.52352E-23, 4.08653E-19, 8.48037E-16, 3.45322E-13, 3.88360E-11, 1.58271E-09,
                            2.90678E-08, 2.89238E-07, 1.74742E-06, 7.11659E-06, 2.12220E-05, 4.94631E-05,
                            9.48704E-05, 1.55950E-04, 2.32021E-04, 3.30496E-04, 4.36129E-04, 5.41596E-04,
                            6.40617E-04, 7.29633E-04, 8.05478E-04, 8.69810E-04, 9.19933E-04, 9.58364E-04,
                            9.86021E-04, 1.02035E-03, 1.03876E-03, 1.05089E-03, 1.05791E-03, 1.05235E-03,
                            1.04783E-03, 1.03984E-03, 1.02934E-03, 1.01662E-03, 1.00207E-03, 9.86022E-04,
                            9.68737E-04, 9.08505E-04, 8.68560E-04, 8.29485E-04, 7.89314E-04, 7.48619E-04,
                            7.07879E-04, 6.67497E-04, 6.27801E-04, 5.89060E-04, 5.51486E-04, 5.15244E-04,
                            4.80457E-04, 4.47213E-04, 4.15569E-04, 3.85554E-04, 3.57177E-04, 3.30429E-04])
    n31_data[8] = np.array([1.34402E-84, 1.54458E-67, 5.33347E-54, 2.92599E-43, 9.50844E-35, 5.15217E-28,
                            1.05884E-22, 1.60752E-18, 3.07497E-15, 1.14604E-12, 1.18101E-10, 4.43411E-09,
                            7.57464E-08, 7.16522E-07, 4.14421E-06, 1.62594E-05, 4.69858E-05, 1.06709E-04,
                            2.00444E-04, 3.24165E-04, 4.82859E-04, 6.81679E-04, 8.94043E-04, 1.10619E-03,
                            1.30629E-03, 1.48796E-03, 1.64489E-03, 1.78162E-03, 1.89105E-03, 1.97873E-03,
                            2.04595E-03, 2.14881E-03, 2.21113E-03, 2.26291E-03, 2.30646E-03, 2.30639E-03,
                            2.31999E-03, 2.32649E-03, 2.32762E-03, 2.32377E-03, 2.31572E-03, 2.30401E-03,
                            2.28908E-03, 2.16352E-03, 2.09307E-03, 2.02130E-03, 1.94502E-03, 1.86543E-03,
                            1.78358E-03, 1.70038E-03, 1.61664E-03, 1.53304E-03, 1.45020E-03, 1.36861E-03,
                            1.28872E-03, 1.21090E-03, 1.13545E-03, 1.06262E-03, 9.92596E-04, 9.25524E-04])
    n31_data[9] = np.array([4.75401E-84, 5.58564E-67, 1.97114E-53, 1.10359E-42, 3.63844E-34, 1.96931E-27,
                            3.95044E-22, 5.73920E-18, 1.03594E-14, 3.61804E-12, 3.48271E-10, 1.21940E-08,
                            1.94557E-07, 1.73535E-06, 9.49220E-06, 3.53898E-05, 9.78145E-05, 2.13990E-04,
                            3.89932E-04, 6.15726E-04, 9.09986E-04, 1.26775E-03, 1.64753E-03, 2.02692E-03,
                            2.38678E-03, 2.71726E-03, 3.00761E-03, 3.26717E-03, 3.48135E-03, 3.66021E-03,
                            3.80503E-03, 4.04294E-03, 4.19928E-03, 4.34098E-03, 4.47235E-03, 4.50103E-03,
                            4.56976E-03, 4.62965E-03, 4.67739E-03, 4.71500E-03, 4.74422E-03, 4.76594E-03,
                            4.78093E-03, 4.54282E-03, 4.43896E-03, 4.32712E-03, 4.20370E-03, 4.07103E-03,
                            3.93117E-03, 3.78595E-03, 3.63696E-03, 3.48559E-03, 3.33305E-03, 3.18038E-03,
                            3.02847E-03, 2.87810E-03, 2.72993E-03, 2.58451E-03, 2.44233E-03, 2.30380E-03])
    n31_data[10] = np.array([1.32437E-83, 1.59705E-66, 5.78046E-53, 3.31567E-42, 1.11608E-33, 6.11314E-27,
                             1.22453E-21, 1.75406E-17, 3.08055E-14, 1.03017E-11, 9.32412E-10, 3.02481E-08,
                             4.44247E-07, 3.64081E-06, 1.84109E-05, 6.41237E-05, 1.67622E-04, 3.50921E-04,
                             6.18235E-04, 9.51988E-04, 1.38828E-03, 1.90995E-03, 2.46245E-03, 3.01685E-03,
                             3.54835E-03, 4.04494E-03, 4.49183E-03, 4.90373E-03, 5.25759E-03, 5.56770E-03,
                             5.83452E-03, 6.26920E-03, 6.58074E-03, 6.87909E-03, 7.17069E-03, 7.31948E-03,
                             7.52988E-03, 7.74704E-03, 7.94274E-03, 8.12483E-03, 8.29633E-03, 8.45745E-03,
                             8.60827E-03, 8.27208E-03, 8.19820E-03, 8.09907E-03, 7.97111E-03, 7.81777E-03,
                             7.64236E-03, 7.44803E-03, 7.23780E-03, 7.01450E-03, 6.78079E-03, 6.53914E-03,
                             6.29183E-03, 6.04091E-03, 5.78827E-03, 5.53555E-03, 5.28421E-03, 5.03551E-03])
    n31_data[11] = np.array([2.72542E-83, 3.39852E-66, 1.27128E-52, 7.52989E-42, 2.61228E-33, 1.46844E-26,
                             2.99847E-21, 4.33451E-17, 7.52583E-14, 2.40328E-11, 2.00182E-09, 5.85814E-08,
                             7.76711E-07, 5.77956E-06, 2.70374E-05, 8.87218E-05, 2.21940E-04, 4.50021E-04,
                             7.74829E-04, 1.17390E-03, 1.69570E-03, 2.31557E-03, 2.97218E-03, 3.63386E-03,
                             4.27344E-03, 4.87836E-03, 5.43187E-03, 5.95246E-03, 6.41180E-03, 6.82694E-03,
                             7.19766E-03, 7.79322E-03, 8.24363E-03, 8.68835E-03, 9.13569E-03, 9.44712E-03,
                             9.83012E-03, 1.02549E-02, 1.06601E-02, 1.10625E-02, 1.14679E-02, 1.18763E-02,
                             1.22873E-02, 1.19929E-02, 1.20947E-02, 1.21605E-02, 1.21846E-02, 1.21691E-02,
                             1.21157E-02, 1.20263E-02, 1.19028E-02, 1.17473E-02, 1.15618E-02, 1.13485E-02,
                             1.11097E-02, 1.08478E-02, 1.05653E-02, 1.02648E-02, 9.94887E-03, 9.62011E-03])
    n31_data[12] = np.array([4.02987E-83, 5.17936E-66, 1.99896E-52, 1.22259E-41, 4.38119E-33, 2.54178E-26,
                             5.34308E-21, 7.88499E-17, 1.36118E-13, 4.12808E-11, 3.14288E-09, 8.35611E-08,
                             1.02240E-06, 7.12696E-06, 3.18387E-05, 1.01221E-04, 2.47763E-04, 4.94985E-04,
                             8.43588E-04, 1.26928E-03, 1.82605E-03, 2.48616E-03, 3.18576E-03, 3.89229E-03,
                             4.57781E-03, 5.22974E-03, 5.83063E-03, 6.40069E-03, 6.90946E-03, 7.37522E-03,
                             7.79759E-03, 8.47193E-03, 8.99342E-03, 9.51487E-03, 1.00457E-02, 1.04561E-02,
                             1.09424E-02, 1.14969E-02, 1.20385E-02, 1.25912E-02, 1.31634E-02, 1.37570E-02,
                             1.43733E-02, 1.41708E-02, 1.44528E-02, 1.47054E-02, 1.49222E-02, 1.51043E-02,
                             1.52523E-02, 1.53670E-02, 1.54489E-02, 1.54982E-02, 1.55153E-02, 1.55004E-02,
                             1.54538E-02, 1.53756E-02, 1.52663E-02, 1.51261E-02, 1.49556E-02, 1.47556E-02])
    n31_data[13] = np.array([4.73952E-83, 6.19330E-66, 2.43351E-52, 1.51726E-41, 5.54927E-33, 3.28959E-26,
                             7.05994E-21, 1.05912E-16, 1.82170E-13, 5.32653E-11, 3.82531E-09, 9.63576E-08,
                             1.13322E-06, 7.67791E-06, 3.36702E-05, 1.05724E-04, 2.56819E-04, 5.10481E-04,
                             8.67091E-04, 1.30139E-03, 1.86980E-03, 2.54300E-03, 3.25702E-03, 3.97871E-03,
                             4.68045E-03, 5.34919E-03, 5.96726E-03, 6.55544E-03, 7.08255E-03, 7.56731E-03,
                             8.00925E-03, 8.71307E-03, 9.26167E-03, 9.81265E-03, 1.03759E-02, 1.08263E-02,
                             1.13545E-02, 1.19623E-02, 1.25612E-02, 1.31781E-02, 1.38232E-02, 1.44996E-02,
                             1.52098E-02, 1.50591E-02, 1.54321E-02, 1.57830E-02, 1.61056E-02, 1.64014E-02,
                             1.66716E-02, 1.69171E-02, 1.71387E-02, 1.73368E-02, 1.75119E-02, 1.76642E-02,
                             1.77937E-02, 1.79004E-02, 1.79841E-02, 1.80445E-02, 1.80813E-02, 1.80940E-02])
    n31_data[14] = np.array([5.01799E-83, 6.60031E-66, 2.61234E-52, 1.64198E-41, 6.05150E-33, 3.61758E-26,
                             7.84100E-21, 1.18520E-16, 2.03112E-13, 5.83687E-11, 4.09032E-09, 1.00716E-07,
                             1.16829E-06, 7.82800E-06, 3.41115E-05, 1.06754E-04, 2.58995E-04, 5.14143E-04,
                             8.72710E-04, 1.30967E-03, 1.88158E-03, 2.55846E-03, 3.27734E-03, 4.00441E-03,
                             4.71023E-03, 5.38435E-03, 6.00687E-03, 6.60076E-03, 7.13362E-03, 7.62526E-03,
                             8.07430E-03, 8.78828E-03, 9.34639E-03, 9.90769E-03, 1.04822E-02, 1.09467E-02,
                             1.14895E-02, 1.21160E-02, 1.27351E-02, 1.33746E-02, 1.40457E-02, 1.47517E-02,
                             1.54959E-02, 1.53652E-02, 1.57723E-02, 1.61604E-02, 1.65238E-02, 1.68643E-02,
                             1.71833E-02, 1.74822E-02, 1.77621E-02, 1.80240E-02, 1.82686E-02, 1.84966E-02,
                             1.87086E-02, 1.89049E-02, 1.90858E-02, 1.92516E-02, 1.94022E-02, 1.95377E-02])

    Te_vals, ne_vals = np.meshgrid(-1.2 + (np.linspace(1, 60, 60) - 1) / 10 - 3,
                                   10 + 0.5 * (np.linspace(1, 15, 15) - 1) + 6)

    return Rbf(Te_vals, ne_vals, n31_data)
